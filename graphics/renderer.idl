import "buffer.idl";
import "shader.idl";

namespace graphics
{
	enum primitive_types
	{
		points = 0,
		triangle_list = 1,
		triangle_strips = 2,
		line_lists = 3,
		line_strips = 4
	};

	enum compilation_status
	{
		success = 0,
		error = 1,
		cancelled = 2
	};

	struct compilation_result
	{
		compilation_status status;
		String error_message;
	};

	[default_interface]
	runtimeclass renderer
	{
		renderer();

		void enable_debug_layer();
		void initialize_buffers_showcase(Windows.UI.Xaml.Controls.SwapChainPanel target_swapchain);
		void initialize_textures_showcase(Windows.UI.Xaml.Controls.SwapChainPanel target_swapchain);
		void clear_shaders();
		void start_render_loop();
		void stop_render_loop();

		Boolean is_rendering{ get; };
		primitive_types current_topology{ get; set; };
		Windows.Foundation.IAsyncOperation<compilation_result> pick_and_compile_shader(String shader_name, String entry_point, String version);
		Windows.Foundation.IAsyncOperation<Windows.Graphics.Imaging.SoftwareBitmap> pick_texture();
		buffer current_buffer{ get; set; };
	}
}
