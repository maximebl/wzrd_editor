<Page
    x:Class="wzrd_editor.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:wzrd_editor"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d" HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch">
    
    <Page.Resources>
    
        <DataTemplate x:Key="textures_list_header">
            <Grid HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Text="Textures" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="shaders_list_header">
            <Grid HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Text="Shaders" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="vertices_list_header">
            <StackPanel Orientation="Vertical">
                <Grid HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="Vertices" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                </Grid>
                <Grid HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <TextBlock HorizontalAlignment="Center" Grid.Column="0" Text="X"></TextBlock>
                    <TextBlock HorizontalAlignment="Center" Grid.Column="1" Text="Y"></TextBlock>
                    <TextBlock HorizontalAlignment="Center" Grid.Column="2" Text="Z"></TextBlock>
                    <TextBlock HorizontalAlignment="Center" Grid.Column="3" Text="R"></TextBlock>
                    <TextBlock HorizontalAlignment="Center" Grid.Column="4" Text="G"></TextBlock>
                    <TextBlock HorizontalAlignment="Center" Grid.Column="5" Text="B"></TextBlock>
                    <TextBlock HorizontalAlignment="Center" Grid.Column="6" Text="A"></TextBlock>
                </Grid>
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="vertices_list_template" x:DataType="local:Vertex">
            <ListViewItem HorizontalContentAlignment="Stretch" >
                <Grid HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <TextBox TextChanged="onchanged_vertex_input" Grid.Column="0" Text="{Binding x, Mode=TwoWay, UpdateSourceTrigger=Explicit}" VerticalAlignment="Center"/>
                    <TextBox TextChanged="onchanged_vertex_input" Grid.Column="1" Text="{Binding y, Mode=TwoWay, UpdateSourceTrigger=Explicit}" VerticalAlignment="Center"/>
                    <TextBox TextChanged="onchanged_vertex_input" Grid.Column="2" Text="{Binding z, Mode=TwoWay, UpdateSourceTrigger=Explicit}" VerticalAlignment="Center"/>
                    <TextBox TextChanged="onchanged_vertex_input" Grid.Column="3" Text="{Binding r, Mode=TwoWay, UpdateSourceTrigger=Explicit}" VerticalAlignment="Center"/>
                    <TextBox TextChanged="onchanged_vertex_input" Grid.Column="4" Text="{Binding g, Mode=TwoWay, UpdateSourceTrigger=Explicit}" VerticalAlignment="Center"/>
                    <TextBox TextChanged="onchanged_vertex_input" Grid.Column="5" Text="{Binding b, Mode=TwoWay, UpdateSourceTrigger=Explicit}" VerticalAlignment="Center"/>
                    <TextBox TextChanged="onchanged_vertex_input" Grid.Column="6" Text="{Binding a, Mode=TwoWay, UpdateSourceTrigger=Explicit}" VerticalAlignment="Center"/>
                </Grid>
            </ListViewItem>
        </DataTemplate>

        <DataTemplate x:Key="indices_list_template" x:DataType="x:Int32">
            <ListViewItem HorizontalContentAlignment="Stretch">
                <TextBox Text="{x:Bind}" />
            </ListViewItem>
        </DataTemplate>

        <DataTemplate x:Key="shaders_list_template" x:DataType="local:Shader">
            <StackPanel Orientation="Horizontal" VerticalAlignment="Top" Margin="8,8,0,0">
                <SymbolIcon x:Name="shader_type_icon" Symbol="{x:Bind TypeGlyph}"></SymbolIcon>
                <TextBlock Text="{x:Bind Name}"></TextBlock>
                <ProgressRing Margin="1,0,0,0" IsActive="{x:Bind Loading, Mode=TwoWay}"/>
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="texture_list_template" x:DataType="local:Texture">
            <StackPanel Orientation="Horizontal" VerticalAlignment="Top" Margin="8,8,0,0">
                <SymbolIcon x:Name="texture_type_icon" Symbol="Page2"></SymbolIcon>
                <TextBlock Text="{x:Bind Name}"></TextBlock>
                <ProgressRing Margin="1,0,0,0" IsActive="{x:Bind Loading, Mode=TwoWay}"/>
            </StackPanel>
        </DataTemplate>

    </Page.Resources>

    <StackPanel x:Name="outer_stackpanel" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Height="829" Width="auto">

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>

                <VisualState x:Name="buffer_full">
                    <VisualState.Setters>
                        <Setter Target="new_vertex_button.IsEnabled" Value="False"/>
                        <Setter Target="render_as_dynamic.IsEnabled" Value="False"/>
                        <Setter Target="render_as_static.IsEnabled" Value="False"/>
                    </VisualState.Setters> 
                </VisualState>

                <VisualState x:Name="dynamic_buffer_selected">
                    <VisualState.Setters>
                        <Setter Target="render_as_dynamic.IsEnabled" Value="False"/>
                        <Setter Target="render_as_static.IsEnabled" Value="False"/>
                        <Setter Target="buffer_capacity.Visibility" Value="Visible"/>
                    </VisualState.Setters> 
                </VisualState>

                <VisualState x:Name="static_buffer_selected">
                    <VisualState.Setters>
                        <Setter Target="render_as_dynamic.IsEnabled" Value="False"/>
                        <Setter Target="render_as_static.IsEnabled" Value="False"/>
                        <Setter Target="slider_x.IsEnabled" Value="False"/>
                        <Setter Target="position_x_value.IsEnabled" Value="False"/>
                        <Setter Target="slider_y.IsEnabled" Value="False"/>
                        <Setter Target="position_y_value.IsEnabled" Value="False"/>
                        <Setter Target="slider_z.IsEnabled" Value="False"/>
                        <Setter Target="position_z_value.IsEnabled" Value="False"/>
                        <Setter Target="color_picker.IsEnabled" Value="False"/>
                        <Setter Target="main_cmd_bar.IsEnabled" Value="False"/>
                        <Setter Target="index_count.IsEnabled" Value="False"/>
                        <Setter Target="vertices_list.IsEnabled" Value="False"/>
                        <Setter Target="new_vertex_button.IsEnabled" Value="False"/>
                        <Setter Target="clear_vertices_button.IsEnabled" Value="False"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <StackPanel HorizontalAlignment="Left" Orientation="Vertical">
            <CommandBar x:Name="main_cmd_bar" Background="Transparent" IsOpen="False" DefaultLabelPosition="Right">
                <!--<AppBarButton Icon="OpenFile" Label="Texture">
                    <AppBarButton.Flyout>
                        <MenuFlyout>
                            <MenuFlyoutItem x:Name="texturePicker" Click="onclick_texture_picker">
                                <MenuFlyoutItem.Icon>
                                    <SymbolIcon Symbol="Page2"></SymbolIcon>
                                </MenuFlyoutItem.Icon>
                                <MenuFlyoutItem.Text>Texture</MenuFlyoutItem.Text>
                                <MenuFlyoutItem.KeyboardAccelerators>
                                    <KeyboardAccelerator Key="T" Modifiers="Shift"/>
                                </MenuFlyoutItem.KeyboardAccelerators>
                            </MenuFlyoutItem>

                            <MenuFlyoutSeparator/>

                            <MenuFlyoutItem x:Name="menuflyout_clear_textures" Click="menuflyout_clear_textures_click" IsEnabled="True">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon Glyph="&#xE75C;"/>
                                </MenuFlyoutItem.Icon>
                                <MenuFlyoutItem.Text>Clear textures</MenuFlyoutItem.Text>
                            </MenuFlyoutItem>
                        </MenuFlyout>
                    </AppBarButton.Flyout>

                </AppBarButton>-->

                <AppBarButton x:Name="shaderPicker" Icon="OpenFile" Label="Shaders" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <AppBarButton.Flyout>
                        <MenuFlyout>
                            <MenuFlyoutItem x:Name="pixelShaderPicker" Click="onclick_pixelshader_picker">
                                <MenuFlyoutItem.Icon>
                                    <SymbolIcon Symbol="SelectAll"></SymbolIcon>
                                </MenuFlyoutItem.Icon>
                                <MenuFlyoutItem.Text>Pixel</MenuFlyoutItem.Text>
                                <MenuFlyoutItem.KeyboardAccelerators>
                                    <KeyboardAccelerator Key="P" Modifiers="Shift"/>
                                </MenuFlyoutItem.KeyboardAccelerators>
                            </MenuFlyoutItem>
                            <MenuFlyoutItem x:Name="vertexShaderPicker" Click="onclick_vertexshader_picker">
                                <MenuFlyoutItem.Icon>
                                    <SymbolIcon Symbol="Play"></SymbolIcon>
                                </MenuFlyoutItem.Icon>
                                <MenuFlyoutItem.Text>Vertex</MenuFlyoutItem.Text>
                                <MenuFlyoutItem.KeyboardAccelerators>
                                    <KeyboardAccelerator Key="V" Modifiers="Shift"/>
                                </MenuFlyoutItem.KeyboardAccelerators>
                            </MenuFlyoutItem>
                            <MenuFlyoutSeparator/>
                            <MenuFlyoutItem x:Name="menuflyout_clear_shaders" Click="menuflyout_clear_shaders_click" IsEnabled="True">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon Glyph="&#xE75C;"/>
                                </MenuFlyoutItem.Icon>
                                <MenuFlyoutItem.Text>Clear shaders</MenuFlyoutItem.Text>
                            </MenuFlyoutItem>
                        </MenuFlyout>
                    </AppBarButton.Flyout>
                </AppBarButton>

                <AppBarButton x:Name="render" Icon="Calculator" Label="render" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <AppBarButton.Flyout>
                        <MenuFlyout>
                            <MenuFlyoutItem x:Name="render_triangles" Click="onclick_build_trianglelist" Text="Triangles list"></MenuFlyoutItem>
                            <MenuFlyoutItem x:Name="render_points" Click="onclick_build_pointlist" Text="Points list" ></MenuFlyoutItem>
                            <MenuFlyoutItem x:Name="render_lines" Click="onclick_build_lineslist" Text="Lines list" ></MenuFlyoutItem>
                            <MenuFlyoutItem x:Name="render_linestrips" Click="onclick_build_linestrips" Text="Line strips" ></MenuFlyoutItem>
                            <MenuFlyoutItem x:Name="render_trianglestrips" Click="onclick_build_trianglestrips" Text="Triangle strips" ></MenuFlyoutItem>
                        </MenuFlyout>
                    </AppBarButton.Flyout>
                </AppBarButton>

                <CommandBar.SecondaryCommands>
                    <AppBarButton Icon="Edit" Label="Settings"/>
                </CommandBar.SecondaryCommands>
            </CommandBar>

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                <ListView x:Name="shaders_list" HorizontalAlignment="Stretch" Width="auto" Height="auto" VerticalAlignment="Top"
                      HeaderTemplate="{StaticResource shaders_list_header}" 
                      Visibility="Collapsed"
                      ItemsSource="{x:Bind GeometryViewModel.Shaders}" 
                      ItemTemplate="{StaticResource shaders_list_template}">
                </ListView>

                <ListView x:Name="textures_list" HorizontalAlignment="Stretch" Width="auto" Height="auto" VerticalAlignment="Top"
                      HeaderTemplate="{StaticResource textures_list_header}" 
                      Visibility="Collapsed"
                      ItemsSource="{x:Bind GeometryViewModel.Textures}" 
                      ItemTemplate="{StaticResource texture_list_template}">
                </ListView>
            </StackPanel>

            <ColorPicker x:Name="color_picker"
                     HorizontalAlignment="Center" 
                     VerticalAlignment="Top" 
                     Margin="0,0,0,0" 
                     IsAlphaSliderVisible="True" 
                     ColorSpectrumComponents="HueSaturation" 
                     ColorSpectrumShape="Ring"/>
        </StackPanel>

        <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Top" Height="650" Width="400">
            <Grid xmlns:src="using:wzrd_editor" 
         Margin="0,50,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
            </Grid>

            <RelativePanel>
                <TextBlock x:Name="position_x_label"
                           Text="X"
                           HorizontalAlignment="Left"/>

                <TextBox x:Name="position_x_value" 
                    Text="{x:Bind Mode=TwoWay, Path=GeometryViewModel.Geometry.Position.x}"  
                    HorizontalAlignment="Right" 
                    Width="68"
                    RelativePanel.RightOf="position_x_label"
                    RelativePanel.AlignRightWithPanel="True"/>

                <Slider x:Name="slider_x" 
                        Minimum="-2" 
                        Maximum="2" 
                        TickPlacement="Inline"
                        TickFrequency="0.1"
                        SnapsTo="Ticks"
                        IsTabStop="False"
                        Value="{x:Bind Mode=TwoWay, Path=GeometryViewModel.Geometry.Position.x}"
                        RelativePanel.Below="position_x_value"
                        RelativePanel.AlignLeftWith="position_x_label"
                        RelativePanel.AlignRightWith="position_x_value"
                        RelativePanel.AlignRightWithPanel="True"
                        />
            </RelativePanel>
            <RelativePanel>
                <TextBlock x:Name="position_y_label"
                           Text="Y"
                           HorizontalAlignment="Left"/>

                <TextBox x:Name="position_y_value"
                         Text="{x:Bind Mode=TwoWay, Path=GeometryViewModel.Geometry.Position.y}"
                         HorizontalAlignment="Right"
                         Width="68"
                         RelativePanel.RightOf="position_y_label"
                         RelativePanel.AlignRightWithPanel="True" />

                <Slider x:Name="slider_y" 
                        Minimum="-2" 
                        Maximum="2" 
                        TickPlacement="Inline"
                        TickFrequency="0.1"
                        IsTabStop="False"
                        SnapsTo="Ticks"
                        RelativePanel.Below="position_y_value"
                        RelativePanel.AlignLeftWith="position_y_label"
                        RelativePanel.AlignRightWith="position_y_value"
                        RelativePanel.AlignRightWithPanel="True"
                        Value="{x:Bind Mode=TwoWay, Path=GeometryViewModel.Geometry.Position.y}"/>
            </RelativePanel>
            <RelativePanel>

                <TextBlock x:Name="position_z_label"
                           Text="Z" 
                           HorizontalAlignment="Left"/>

                <TextBox x:Name="position_z_value" 
                         Text="{x:Bind Mode=TwoWay, Path=GeometryViewModel.Geometry.Position.z}"
                         HorizontalAlignment="Right"
                         Width="68"
                         RelativePanel.RightOf="position_z_label"
                         RelativePanel.AlignRightWithPanel="True"/>

                <Slider x:Name="slider_z" 
                        Minimum="-2" 
                        Maximum="2" 
                        SnapsTo="Ticks"
                        Value="{x:Bind Mode=TwoWay, Path=GeometryViewModel.Geometry.Position.z}"
                        TickPlacement="Inline"
                        TickFrequency="0.1"
                        IsTabStop="False"
                        RelativePanel.Below="position_z_value"
                        RelativePanel.AlignLeftWith="position_z_label"
                        RelativePanel.AlignRightWith="position_z_value"
                        RelativePanel.AlignRightWithPanel="True"/>
            </RelativePanel>

            <StackPanel>
                <StackPanel.Resources>
                    <Style TargetType="Button">
                        <Setter Property="Margin" Value="0,0,0,0"/>
                    </Style>
                </StackPanel.Resources>
                <Grid HorizontalAlignment="Stretch" ColumnSpacing="1" RowSpacing="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Button x:Name="new_vertex_button" 
                            Content="New vertex" 
                            Click="onclick_create_vertex" 
                            Grid.Row="0"
                            Grid.ColumnSpan="4"
                            HorizontalAlignment="Stretch" 
                            VerticalAlignment="Stretch"/>
                    <Button x:Name="clear_vertices_button" 
                            Content="Clear vertices" 
                            Click="onclick_clear_vertex" 
                            Grid.Row="1"
                            Grid.ColumnSpan="4"
                            HorizontalAlignment="Stretch" 
                            VerticalAlignment="Stretch"/>

                    <RelativePanel Grid.Row="2" Grid.ColumnSpan="4">
                        <TextBlock x:Name="index_count_label" 
                           Text="Index count" 
                           HorizontalAlignment="Left"/>
                        <TextBox x:Name="index_count"
                         Text="{x:Bind Mode=TwoWay, Path=GeometryViewModel.Geometry.Index}"
                         HorizontalAlignment="Right"
                         Width="68"
                         RelativePanel.RightOf="index_count_label"
                         RelativePanel.AlignRightWithPanel="True"/>
                    </RelativePanel>

                    <Button 
                        Grid.Row="3"
                        Grid.ColumnSpan="4"
                        HorizontalAlignment="Stretch"
                        Click="onclick_new_index"
                        Content="New index"/>

                    <Button 
                        Grid.Row="4"
                        Grid.ColumnSpan="4"
                        HorizontalAlignment="Stretch"
                        Click="onclick_clear_indices"
                        Content="Clear indices"/>

                    <Button x:Name="render_as_static" 
                          Content="Static buffer" 
                          Grid.Column="0" 
                          Click="onclick_render_as_static" 
                          Grid.Row="5"
                          Grid.ColumnSpan="2"
                          HorizontalAlignment="Stretch" 
                          VerticalAlignment="Stretch"/>

                    <Button x:Name="render_as_dynamic" 
                          Content="Dynamic buffer" 
                          Grid.Column="2" Click="onclick_render_as_dynamic" 
                          Grid.Row="5"
                          Grid.ColumnSpan="2"
                          HorizontalAlignment="Stretch" 
                          VerticalAlignment="Stretch"/>

                    <RelativePanel x:Name="buffer_capacity" Visibility="Collapsed" Grid.Row="6" Grid.ColumnSpan="4">
                        <TextBlock
                            x:Name="buffer_capacity_label"
                            HorizontalAlignment="Left"
                            Text="Buffer capacity"                            
                            />
                        <ProgressBar
                            x:Name="buffer_capacity_progressbar"
                            Value="{x:Bind Path=GeometryViewModel.Geometry.BufferCapacity, Mode=TwoWay}"
                            RelativePanel.Below="buffer_capacity_label"
                            HorizontalAlignment="Stretch"
                            RelativePanel.AlignLeftWith="buffer_capacity_label"
                            RelativePanel.AlignRightWithPanel="True"
                            />
                    </RelativePanel>
                </Grid>
            </StackPanel>

            <ListView x:Name="vertices_list" HorizontalAlignment="Stretch" Width="auto" Height="auto" Margin="-2,3" VerticalAlignment="Center"
                      Visibility="Collapsed"
                      Background="{StaticResource ContentDialogDimmingThemeBrush}"
                      ItemsSource="{x:Bind Path=GeometryViewModel.Geometry.Vertices}" 
                      HeaderTemplate="{StaticResource vertices_list_header}" 
                      ItemTemplate="{StaticResource vertices_list_template}"/>

            <ListView x:Name="indices_list" HorizontalAlignment="Stretch" Width="auto" Height="auto" Margin="-2,3" VerticalAlignment="Center"
                      Visibility="Visible"
                      Background="{StaticResource ContentDialogDimmingThemeBrush}"
                      ItemsSource="{x:Bind Path=GeometryViewModel.Geometry.Indices}" 
                      ItemTemplate="{StaticResource indices_list_template}"/>
        </StackPanel>
        <SwapChainPanel x:Name="swapChainPanel" HorizontalAlignment="Left" Width="700" Height="700" VerticalAlignment="Center" Margin="0,0,0,0" />
    </StackPanel>
</Page>
